<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.main.dao.ProjectInterface">

 	<!-- 로그인 처리  -->
	<select id="login" resultType="String">
		SELECT ID FROM JOIN_REG WHERE ID=#{param1} AND PW=#{param2}
	</select>

	<!--중복 체크(ID)  -->
	<select id="overlayId" resultType="String">
		SELECT ID FROM JOIN_REG WHERE ID=#{param1}
	</select>
	
	<!-- 중복 체크(Nick) -->
	<select id="overlayNick" resultType="String">
		SELECT NICKNAME FROM JOIN_REG WHERE NICKNAME=#{param1}
	</select>
	
	<!-- 닉네임 찾기(ID >> 닉네임)  -->
	<select id="FindNick" resultType="String">
		SELECT NICKNAME FROM JOIN_REG WHERE ID=#{param1}		
	</select>
	<!-- 카테고리 찾기  -->
	<select id="CategoryName" resultType="String">
		SELECT CATEGORY_NAME FROM TOTAL_BOARD WHERE BOARD_IDX= #{param1}
	</select>	
	
	<!--아이디 찾기( 닉네임 >> ID )  -->
	<select id="FindId" resultType="com.project.main.dto.ReplyDto">
		SELECT ID FROM JOIN_REG WHERE JOIN_IDX=
		(SELECT JOIN_IDX FROM TOTAL_BOARD WHERE BOARD_IDX=#{param1})		
	</select>
	
	<!-- 회원가입  -->
	<insert id="memberJoin">
		INSERT INTO JOIN_REG(JOIN_IDX,ID,NICKNAME,PW,PW_QNA,PW_ANSWER,NAME,PHONE,BIRTH,GENDER,EMAIL) 
		VALUES(SEQ_JOIN_REG.NEXTVAL,#{id},#{nickName},#{pw},#{PW_QnA},#{PW_ANSWER},#{name},#{phone},#{birth},#{gender},#{email})
	</insert>
	
	<!-- 마이페이지/회원정보 보기 -->
 	<select id="MemberData_View" resultType="com.project.main.dto.MemberInfo">
 		SELECT * FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	

	<!-- 회원정보 수정 보기 -->
 	<select id="Mem_ModiView" resultType="com.project.main.dto.MemberInfo">
 		SELECT * FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!-- 회원정보 수정 --> 	
 	<update id="Member_Modify">
 		UPDATE JOIN_REG SET NICKNAME=#{param2}, PW=#{param3}, NAME=#{param4}, BIRTH=#{param5}, GENDER=#{param6}, EMAIL=#{param7} WHERE ID=#{param1} 
 	</update>
 
	<!-- 탈퇴(Pw찾기) userId==>userPw  -->
	<select id="FindPw" resultType="String">
		SELECT PW FROM JOIN_REG WHERE ID=#{param1}	
	</select>
 	<!-- 탈퇴 -->
	<delete id="withdrawa">
	 	DELETE FROM join_reg WHERE JOIN_IDX=(SELECT JOIN_IDX FROM JOIN_REG WHERE ID = #{param1}) CASCADE
	</delete>
	  
 	<!--패션토크 상세보기  -->
 	<select id="Board_Detail" resultType="com.project.main.dto.BoardDto">
 		SELECT * FROM TOTAL_BOARD WHERE board_idx = #{param1}
 	</select>
 	
 	<!-- 조회수 증가  -->
 	<!-- <update id="upHit">
 		UPDATE TOTAL_BOARD SET bHit = bHit+1 WHERE idx = #{param1}
 	</update> -->

 	
	<!-- 글쓰기 -->
 	<insert id="Board_Write">
 		INSERT INTO TOTAL_BOARD(
 	 		board_idx, nickname, subject, content, filename, newfilename, category_name)VALUES(
 			seq_total_board.NEXTVAL, #{param1}, #{param2}, #{param3},#{param4},#{param5},#{param6})
 	</insert>
 	 	
 	<!--코디 글쓰기 -->
 	<insert id="CodiBoard_Writes">
 		INSERT INTO CATEGORY_CLOTH(
 	 		filename, category_name, newfilename)VALUES(
 			#{param1}, #{param2}, #{param3})
 	</insert>
 	
 	<!-- 게시판 게시물 수 -->
 	<select id="BoardCount" resultType="Integer">
		 SELECT COUNT(*) FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{category_name}
 	</select>
 	
 	<!--댓글추천수 증가  -->
 	<update id="reple_like">
 		UPDATE total_reple SET reple_like = reple_like+1 WHERE reple_idx = #{param1}
 	</update>
 	
 	<!--비추천수 증가  -->
 	<update id="reple_hate">
 		UPDATE total_reple SET reple_hate = reple_hate+1 WHERE reple_idx = #{param1}
 	</update>
 	
 	<!--  댓글 가져오기 -->
 	<select id="replyList" resultType="com.project.main.dto.ReplyDto">
 	 	SELECT reple_idx,board_idx,nickname,reple_content,reple_date,reple_like,reple_hate FROM total_reple WHERE board_idx= #{param1}
 	</select>
 	<!--코디게시판 상세보기  -->
 	<select id="CodiBoard_Detail" resultType="com.project.main.dto.BoardDto">
 		SELECT * FROM TOTAL_BOARD WHERE board_idx = #{param1}
 	</select>	
 	
 	<!-- 유저 비밀번호 찾기 -->
 	<select id="pw" resultType="String">
 		SELECT PW FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!-- 유저 아이디 찾기 (이메일 전송 버전)-->
 	<select id="Find_Id" resultType="String">
 		SELECT ID FROM JOIN_REG WHERE EMAIL = #{param1}
 	</select>
 	
 	 <!-- 유저 비번 찾기 (이메일 전송 버전)-->
 	<select id="FindPw_userEmail" resultType="String">
 		SELECT PW FROM JOIN_REG WHERE ID = #{param1}
 	</select>		
 	
 	
 	<!-- FT 리스트 보이기 -->
 	<select id="Board_list" resultType="com.project.main.dto.BoardDto">
 		SELECT BOARD_IDX, NICKNAME ,SUBJECT ,REG_DATE ,NEWFILENAME,BHIT,REPLES,ft_like FROM (
 					  SELECT BOARD_IDX ,NICKNAME ,SUBJECT 
 							,REG_DATE ,BHIT,REPLES,ft_like,NEWFILENAME
 							,ROW_NUMBER() OVER(ORDER BY BOARD_IDX ASC) AS RNUM FROM 
 							(SELECT BOARD_IDX, NICKNAME ,SUBJECT ,REG_DATE ,NEWFILENAME,BHIT,REPLES,ft_like FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{param3} )
   							)WHERE RNUM BETWEEN #{param1} AND #{param2}  
 	</select>
 	
 	<!-- 코디 리스트 보이기 -->
 	<select id="Cd_list" resultType="com.project.main.dto.BoardDto">
 		SELECT BOARD_IDX, SUBJECT ,SUB_SUBJECT ,FILENAME ,NEWFILENAME,BHIT,REPLES,ft_like FROM (
 					  SELECT BOARD_IDX ,NICKNAME ,SUBJECT 
 							,REG_DATE ,BHIT,REPLES,ft_like,NEWFILENAME
 							,ROW_NUMBER() OVER(ORDER BY BOARD_IDX ASC) AS RNUM FROM 
 							(SELECT BOARD_IDX, NICKNAME ,SUBJECT ,REG_DATE ,NEWFILENAME,BHIT,REPLES,ft_like FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{param3} )
   							)WHERE RNUM BETWEEN #{param1} AND #{param2}  
 	</select>
 
 	
 	<!--댓글 등록  -->
 	<insert id="replyRegist">
 		INSERT INTO total_reple(REPLE_IDX,BOARD_IDX,NICKNAME,REPLE_CONTENT,REPLE_LIKE,REPLE_HATE) values(seq_total_reple.nextval,#{param1},#{param2},#{param3},0,0)
 	</insert>
 	  	
 	<!-- 댓글 삭제 -->
 	<delete id="repleDel">
 		DELETE FROM TOTAL_REPLE WHERE REPLE_IDX = #{param1}
 	</delete>

 	<!-- 유저 이메일 찾기(이메일 전송 버전) -->
 	<select id="Find_Email" resultType="String">
 		SELECT EMAIL FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	 <!--사다리 게임 설정값 수정-->
 	<update id="Bridge">
 		UPDATE TIME_EVENT SET TIMENUM = #{param1} , SELECT1 = #{param2}, SELECT2 = #{param3}, SELECT3 = #{param4}, SELECT4 = #{param5} , SELECT5 = #{param6}, SELECT6 = #{param7}
 	</update>
 	
 	<!-- 사다리 게임 정보 가져오기 -->
 	<select id="Find_ladderData" resultType="com.project.main.dto.GameDto">
 		SELECT * FROM TIME_EVENT WHERE TIME_EVENT_NAME = #{param1}
 	</select>
 	
 	<!--   -->
</mapper>