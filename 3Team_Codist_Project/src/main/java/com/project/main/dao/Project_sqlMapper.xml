<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.main.dao.ProjectInterface">

 	<!-- 로그인 처리  -->
	<select id="login" resultType="String">
		SELECT ID FROM JOIN_REG WHERE ID=#{param1} AND PW=#{param2}
	</select>

	<!--중복 체크(ID)  -->
	<select id="overlayId" resultType="String">
		SELECT ID FROM JOIN_REG WHERE ID=#{param1}
	</select>
	
	<!-- 중복 체크(댓글like) -->
	<select id="overlayNick" resultType="String">
		SELECT NICKNAME FROM JOIN_REG WHERE NICKNAME=#{param1}
	</select>
	
	<!-- 중복 체크(댓글hate) -->
	<select id="overlayLike" resultType="String">
		SELECT NICKNAME FROM REPLE_VALIDATION WHERE REPLE_IDX=#{param1}
	</select>
	
	<!-- 중복 체크(Nick) -->
	<select id="overlayHate" resultType="String">
		SELECT NICKNAME FROM JOIN_REG WHERE NICKNAME=#{param1}
	</select>
	
	<!-- 게시판 삭제 -->
	<delete id="BoardDelete">
		DELETE FROM TOTAL_BOARD WHERE BOARD_IDX= #{param1}
	</delete>

	<!-- 카테고리 찾기  -->
	<select id="CategoryName" resultType="String">
		SELECT CATEGORY_NAME FROM TOTAL_BOARD WHERE BOARD_IDX= #{param1}
	</select>	
	
	<!-- 닉네임 찾기(ID >> 닉네임)  -->
	<select id="FindNick" resultType="String">
		SELECT NICKNAME FROM JOIN_REG WHERE ID=#{param1}		
	</select>
	
	<!--아이디 찾기( 닉네임 >> ID )  -->
	<select id="FindId" resultType="com.project.main.dto.ReplyDto">
		SELECT ID FROM JOIN_REG WHERE JOIN_IDX=
		(SELECT JOIN_IDX FROM TOTAL_BOARD WHERE BOARD_IDX=#{param1})		
	</select>
	
	<!-- 회원가입  -->
	<insert id="memberJoin">
		INSERT INTO JOIN_REG(JOIN_IDX,ID,NICKNAME,PW,PW_QNA,PW_ANSWER,NAME,PHONE,BIRTH,GENDER,EMAIL) 
		VALUES(SEQ_JOIN_REG.NEXTVAL,#{id},#{nickName},#{pw},#{PW_QnA},#{PW_ANSWER},#{name},#{phone},#{birth},#{gender},#{email})
	</insert>
	<!-- 쿠폰생성 -->
   <insert id="updateCoupon">
      INSERT INTO EVENT_COUPON(USER_ID,JOIN_IDX,COUPON_5,COUPON_10 ,COUPON_15  ,COUPON_20,Mileage  ) 
      VALUES(#{param1},#{param2},0,0,0,0,0)
   </insert>
	
	<!-- 마이페이지/회원정보 보기 -->
 	<select id="MemberData_View" resultType="com.project.main.dto.MemberInfo">
 		SELECT * FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	

	<!-- 회원정보 수정 보기 -->
 	<select id="Mem_ModiView" resultType="com.project.main.dto.MemberInfo">
 		SELECT * FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!-- 회원정보 수정 --> 	
 	<update id="Member_Modify">
 		UPDATE JOIN_REG SET NICKNAME=#{param2}, PW=#{param3}, NAME=#{param4}, BIRTH=#{param5}, GENDER=#{param6}, EMAIL=#{param7} WHERE ID=#{param1} 
 	</update>
 
	<!-- 탈퇴(Pw찾기) userId==>userPw  -->
	<select id="FindPw" resultType="String">
		SELECT PW FROM JOIN_REG WHERE ID=#{param1}	
	</select>
	
 	<!-- 탈퇴 -->
	<delete id="withdrawa">
	 	DELETE FROM join_reg WHERE JOIN_IDX=(SELECT JOIN_IDX FROM JOIN_REG WHERE ID = #{param1})
	</delete>
	  
 	<!--게시판 상세보기(코디 제외)  -->
 	<select id="Board_Detail" resultType="com.project.main.dto.BoardDto">
 		SELECT * FROM TOTAL_BOARD WHERE board_idx = #{param1}
 	</select>
 	
 	<!--코디게시판 상세보기  -->
 	<select id="CodiBoard_Detail" resultType="com.project.main.dto.ClothDto">
 		SELECT * FROM CATEGORY_CLOTH WHERE board_idx = #{param1} ORDER BY CC_IDX ASC
 	</select>	
 	
 	<!-- 조회수 증가  -->
 	<update id="upHit">
 		UPDATE TOTAL_BOARD SET BHit = BHit+1 WHERE board_idx = #{param1}
 	</update>
 	
	<!-- 코디게시판 업데이트 -->
 	<update id="CB_Update">
 		UPDATE TOTAL_BOARD SET SUBJECT=#{param2}, SUB_SUBJECT= #{param3},FILENAME=#{param4}
 					,NEWFILENAME=#{param5},WEATHER=#{param6} WHERE BOARD_IDX=#{param1}
 	</update>
 	
 	<!-- 코디게시판 업데이트(외투,상의,하의) -->
 	<update id="Cloth_update">
 		UPDATE CATEGORY_CLOTH SET CLOTH_NAME= #{param3}, REAL_NAME=#{param4}
 					,CLOTH_URL=#{param5},CLOTH_DETAIL=#{param6},FILENAME=#{param7},NEWFILENAME=#{param8} WHERE CC_IDX=#{param1} AND CATEGORY_NAME=#{param2}
 	</update>
 	<!-- 게시판 업데이트  -->
 	<update id="Board_update">
 		UPDATE TOTAL_BOARD SET SUBJECT=#{param2}, CONTENT= #{param3},FILENAME=#{param4}
 					,NEWFILENAME=#{param5} WHERE BOARD_IDX=#{param1}
 	</update>
 	
	<!-- 글쓰기 -->
 	<insert id="Board_Write">
 		INSERT INTO TOTAL_BOARD(
 	 		board_idx,  nickname, subject, content, filename, newfilename, category_name,join_idx,FT_LIKE,FT_HATE,REPLES,BHIT)VALUES(
 			seq_total_board.NEXTVAL, #{param1}, #{param2}, #{param3},#{param4},#{param5},#{param6},#{param7},0,0,0,0)
 	</insert>
 	 	
 	<!--코디 글쓰기(메인) -->
 	<insert id="CB_write">
 		INSERT INTO TOTAL_BOARD(
 	 		category_name, Board_idx,JOIN_IDX ,subject,sub_subject,filename,newfilename,weather,FT_LIKE,FT_HATE,REPLES,BHIT)
 	 		VALUES('CB',SEQ_TOTAL_BOARD.NEXTVAL,1,#{param1}, #{param2},#{param3},#{param4},#{param5},0,0,0,0)
 	</insert>
 	
 	<!--메인 글쓴뒤 idx찾기 -->
 	<select id="CB_writeFind" resultType="Integer">
 		SELECT BOARD_IDX FROM TOTAL_BOARD 
 			WHERE subject=#{param1} AND sub_subject=#{param2} 
 				AND filename=#{param3} AND newfilename=#{param4}
 	</select>
 	
 	<!--코디 글쓰기(외투,상의,하의) -->
 	<insert id="Cloth_write">
 		INSERT INTO CATEGORY_CLOTH(
 	 		CC_IDX, BOARD_IDX, CATEGORY_NAME,CLOTH_NAME,REAL_NAME,CLOTH_URL,CLOTH_DETAIL,FILENAME,NEWFILENAME)
 	 		VALUES(SEQ_CATEGORY_CLOTH.NEXTVAL,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},#{param8})
 	</insert>
 	
 	<!-- 게시판 게시물 수 -->
 	<select id="BoardCount" resultType="Integer">
		 SELECT COUNT(*) FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{category_name}
 	</select>
 		
 	<!-- 게시판 옷 게시물 수 -->
 	<select id="ClothCount" resultType="Integer">
		 SELECT COUNT(*) FROM CATEGORY_CLOTH WHERE CATEGORY_NAME = #{category_name}
 	</select>
 	
 	<!--  댓글 가져오기 -->
 	<select id="replyList" resultType="com.project.main.dto.ReplyDto">
 	 	SELECT reple_idx,board_idx,nickname,reple_content,reple_date,reple_like,reple_hate FROM total_reple WHERE board_idx= #{param1}
 	</select>
 	
 	<!--댓글 등록  -->
 	<insert id="replyRegist">
 		INSERT INTO total_reple(REPLE_IDX,BOARD_IDX,NICKNAME,REPLE_CONTENT,REPLE_LIKE,REPLE_HATE) values(seq_total_reple.nextval,#{param1},#{param2},#{param3},0,0)
 	</insert>
 	  	
 	<!-- 댓글 삭제 -->
 	<delete id="repleDel">
 		DELETE FROM TOTAL_REPLE WHERE REPLE_IDX = #{param1}
 	</delete>
 	
 	<!-- 게시판 추천수 증가  -->
 	<update id="Board_Uplike">
 		UPDATE TOTAL_BOARD SET ft_LIKE= ft_LIKE+1  WHERE BOARD_IDX=#{param1}
 	</update>
 	
 	<!--댓글추천수 증가  -->
 	<update id="reple_like">
 		UPDATE total_reple SET reple_like = reple_like+1 WHERE reple_idx = #{param1}
 	</update>
 	
 	<!--비추천수 증가  -->
 	<update id="reple_hate">
 		UPDATE total_reple SET reple_hate = reple_hate+1 WHERE reple_idx = #{param1}
 	</update>

 	<!-- 유저 비밀번호 찾기 -->
 	<select id="pw" resultType="String">
 		SELECT PW FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!-- 유저 아이디 찾기 (이메일 전송 버전)-->
 	<select id="Find_Id" resultType="String">
 		SELECT ID FROM JOIN_REG WHERE NAME = #{param1} AND PHONE= #{param2} AND EMAIL = #{param3} 
 	</select>
 	
 	 <!-- 유저 비번 찾기1 (이메일 전송 버전)-->
 	<select id="FindPw_userData" resultType="String">
 		SELECT PW FROM JOIN_REG WHERE ID = #{param1} AND NAME = #{param2} AND PW_ANSWER = #{param3}
 	</select>
 	
 	 <!-- 유저 비번 찾기2 (이메일 전송 버전)-->
 	<select id="FindPw_userData2" resultType="String">
 		SELECT PW FROM JOIN_REG WHERE ID = #{param1} AND NAME = #{param2} AND BIRTH = #{param3}
 	</select>			
 	
 	<!--  리스트 보이기 -->
 	<select id="Board_list" resultType="com.project.main.dto.BoardDto">
 		SELECT category_name,BOARD_IDX, NICKNAME ,SUBJECT ,REG_DATE ,NEWFILENAME,BHIT,REPLES,ft_like FROM (
 					  SELECT category_name,BOARD_IDX ,NICKNAME ,SUBJECT 
 							,REG_DATE ,BHIT,REPLES,ft_like,NEWFILENAME
 							,ROW_NUMBER() OVER(ORDER BY BOARD_IDX ASC) AS RNUM FROM 
 							(SELECT category_name,BOARD_IDX, NICKNAME ,SUBJECT ,REG_DATE ,NEWFILENAME,BHIT,REPLES,ft_like FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{param3} )
   							)WHERE RNUM BETWEEN #{param1} AND #{param2}  
 	</select>
 	
 	<!-- 코디 리스트 보이기 -->
 	<select id="Cd_list" resultType="com.project.main.dto.BoardDto">
 		SELECT BOARD_IDX, SUBJECT ,SUB_SUBJECT ,FILENAME ,NEWFILENAME,REPLES,ft_like FROM (
 					  SELECT BOARD_IDX ,SUBJECT ,SUB_SUBJECT 
 							,FILENAME ,NEWFILENAME,REPLES,ft_like
 							,ROW_NUMBER() OVER(ORDER BY BOARD_IDX ASC) AS RNUM FROM 
 							(SELECT BOARD_IDX, SUBJECT ,SUB_SUBJECT ,FILENAME ,NEWFILENAME,REPLES,ft_like FROM TOTAL_BOARD WHERE CATEGORY_NAME = #{param3} )
   							)WHERE RNUM BETWEEN #{param1} AND #{param2}  
 	</select>
 	
 	<!-- 상의,하의,외투 리스트 보이기 -->
 	<select id="Cloth_list" resultType="com.project.main.dto.ClothDto">
 		SELECT CC_IDX,BOARD_IDX, CLOTH_NAME ,REAL_NAME ,NEWFILENAME,FILENAME,CLOTH_URL,CLOTH_DETAIL FROM (
 					  SELECT CC_IDX,BOARD_IDX, CLOTH_NAME 
 					  		,REAL_NAME ,NEWFILENAME,FILENAME,CLOTH_URL,CLOTH_DETAIL
 							,ROW_NUMBER() OVER(ORDER BY CC_IDX ASC) AS RNUM FROM 
 							(SELECT CC_IDX,BOARD_IDX, CLOTH_NAME ,REAL_NAME ,NEWFILENAME,FILENAME,CLOTH_URL,CLOTH_DETAIL FROM CATEGORY_CLOTH WHERE CATEGORY_NAME = #{param3} )
   							)WHERE RNUM BETWEEN #{param1} AND #{param2}  
 	</select>

 	<!-- 유저 이메일 찾기(이메일 전송 버전) -->
 	<select id="Find_Email" resultType="String">
 		SELECT EMAIL FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!-- 일일 이벤트 -->
 	<insert id="DailyEvent">
 		INSERT INTO SELECTION(IDX,SELECTION_TYPE,SELECTION_NAME,SELECTION_LIKE) VALUES(SEQ_SELECTION.NEXTVAL,'VS이벤트',#{param1},0)
 	</insert>
 	
 	<!-- 일일 이벤트 찾기 -->
 	<select id="EventCall" resultType="com.project.main.dto.SelectionDto">
 		SELECT IDX,SELECTION_TYPE,SELECTION_NAME,SELECTION_LIKE FROM SELECTION
 	</select>
 	
	<!-- 일일 이벤트 좋아요 올리기-->
	<update id="EventUplike">
		UPDATE SELECTION SET SELECTION_LIKE = SELECTION_LIKE+1 WHERE SELECTION_NAME = #{param1}
	</update>
	
	<!--당첨자 후보 업데이트   -->
	<insert id="EventupLike">
		INSERT INTO CANDIDATE VALUES(SEQ_CANDIDATE.NEXTVAL,#{param2},#{param1})
	</insert>
 	
 	 <!--사다리 게임 설정값 수정-->
 	<update id="Bridge">
 		UPDATE TIME_EVENT SET TIMENUM = #{param1} , SELECT1 = #{param2}, SELECT2 = #{param3}, SELECT3 = #{param4}, SELECT4 = #{param5} , SELECT5 = #{param6}, SELECT6 = #{param7}
 	</update>
 	
 	<!--사다리 게임 시간값 수정-->
 	<update id="Time">
 		UPDATE TIME_EVENT SET TIME_START = #{param1} , TIME_END = #{param2}
 	</update>
 	
 	<!-- 사다리 게임 정보 가져오기 -->
 	<select id="Find_ladderData" resultType="com.project.main.dto.GameDto">
 		SELECT * FROM TIME_EVENT WHERE TIME_EVENT_NAME = #{param1}
 	</select>

 	<!-- 마일리지 정보 가져오기 -->
 	<select id="Find_Mileage" resultType="com.project.main.dto.MileageDto">
 		SELECT * FROM EVENT_COUPON WHERE USER_ID = #{param1}
  	</select> 	
 		
 	<!--마일리지 넣기-->
 	<update id="Mileage_put">
 		UPDATE EVENT_COUPON SET MILEAGE = #{param2} WHERE USER_ID = #{param1}
 	</update>
 	
 	<!--마일리지 사용 및 쿠폰저장-->
 	<update id="Mileage_use">
 		UPDATE EVENT_COUPON SET MILEAGE = #{param2}, ${param3}=${param3}+1 WHERE USER_ID = #{param1}
 	</update>
 	
 	<!-- 베스트 코디 보기 -->
 	<select id="BOARD_BestList" resultType="com.project.main.dto.BoardDto">
		SELECT CATEGORY_NAME,BOARD_IDX, NICKNAME ,SUBJECT ,SUB_SUBJECT,CONTENT
		 					,REG_DATE ,FILENAME,NEWFILENAME,BHIT,REPLES,FT_LIKE FROM (
		 						SELECT CATEGORY_NAME,BOARD_IDX, NICKNAME 
		 									,SUBJECT ,SUB_SUBJECT,CONTENT,REG_DATE 
		 									,FILENAME,NEWFILENAME,BHIT,REPLES,FT_LIKE
		 									,ROW_NUMBER() OVER(ORDER BY FT_LIKE DESC) 
		 									AS RNUM FROM TOTAL_BOARD WHERE CATEGORY_NAME=#{param1}) WHERE RNUM BETWEEN #{param2} AND #{param3}

 	</select>
 	
 	<!-- 코디게시판에서 옷 고르고 담기(DB에) -->
 	<insert id="Put_Cloth">
 		INSERT INTO MY_WARDROBES(CLOSET_IDX, JOIN_IDX, CALENDER_SUBJECT, CALENDER_DATE, MY_OUTER, MY_TOP, MY_PANTS) values(SEQ_MY_WARDROBES.NEXTVAL, #{param1},#{param2},#{param3},#{param4},#{param5},#{param6})
 	</insert>
 	
 	<!-- 유저 아이디로(세션아이디) Join_idx 찾기 -->
 	<select id="Find_JoinIdx" resultType="String">
 		SELECT JOIN_IDX FROM JOIN_REG WHERE ID = #{param1}
 	</select>
 	
 	<!--join_Idx로 외투,상,하의 + closet_idx 찾아오기 -->
 	<select id="Find_myCloth" resultType="com.project.main.dto.myClothDto">
 		SELECT * FROM MY_WARDROBES WHERE JOIN_IDX = #{param1} ORDER BY CLOSET_IDX DESC
 	</select>
 	
 	<!-- 쪽지 전채 개수 -->
	<select id="countNote" resultType="Integer">
		SELECT COUNT(*) FROM NOTE WHERE LETTER_NEW='Y'
	</select>
	<!-- 쪽지 등록 -->
	<insert id="RegistNote">
		INSERT INTO NOTE(NOTE_IDX,USER_ID,JOIN_IDX,ADMIN,ADMIN_IDX,LETTER_CONTENT,LETTER_NEW) 
				VALUES(SEQ_NOTE.NEXTVAL,#{param1},#{param2},'ADMIN',1,#{param3},'Y')
	</insert>
	<!-- 쪽지 리스트  -->
	<select id="AdminMessageList" resultType="com.project.main.dto.NoteDto">
		SELECT * FROM NOTE ORDER BY NOTE_IDX ASC
	</select>
	<!-- 알람 삭제 -->
	<update id="NewUpdate">
		UPDATE NOTE SET LETTER_NEW='N'
	</update>
	
 	<!-- 마일리지+쿠폰 리스트 -->
 	<select id="Mileage_List" resultType="com.project.main.dto.MileageDto">
 		SELECT JOIN_IDX, USER_ID, COUPON_5, COUPON_10, COUPON_15, COUPON_20, MILEAGE FROM EVENT_COUPON ORDER BY JOIN_IDX ASC 	
 	</select>
 	
 	<!-- 전체 회원 리스트 -->
 	<select id="Member_list" resultType="com.project.main.dto.MemberInfo">
 		SELECT * FROM JOIN_REG ORDER BY JOIN_IDX ASC 	
 	</select>
 	
 	<!-- 회원전체 마일리지 업데이트(관리자) -->
 	<update id="Update_Mileage">
 		UPDATE EVENT_COUPON SET MILEAGE=${param1} WHERE USER_ID = #{param2} 
 	</update>
 	
   
   <!-- 유저 이메일 찾기(이메일 문의용- 문의 내용에 담을 이메일 주소) -->
   <select id="Find_userEmail" resultType="String">
   		SELECT EMAIL FROM JOIN_REG WHERE ID = #{param1}
   </select>
   
   <!-- 날씨 파일이름 넣기(오늘)  -->
   <insert id="Weather">
   		INSERT INTO WEATHER(DailyCody,TomrrowCody) VALUES(#{param1},'내일')
   </insert>
   <!-- 날씨 파일이름 넣기(내일)  -->
   <update id="Weather2">
   		UPDATE WEATHER SET TomrrowCody =#{param2}
   </update>
   <!-- 날씨 찾기 -->
   <select id="Findweather" resultType="com.project.main.dto.WeatherDto">
   		SELECT * FROM WEATHER
   </select>

</mapper>